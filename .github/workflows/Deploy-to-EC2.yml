name: Deploy to EC2

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'corretto'
          cache: maven

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Verify JAR file
        run: |
          ls -l target/
          test -f target/weshop-2024-0.0.1-SNAPSHOT.jar || (echo "JAR file not found" && exit 1)

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/key.pem
          chmod 600 ~/.ssh/key.pem
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to EC2
        run: |
          # Stop the existing service
          ssh -i ~/.ssh/key.pem ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} 'sudo systemctl stop springapp || true'
          
          # Copy the JAR file to home directory first
          scp -i ~/.ssh/key.pem target/weshop-2024-0.0.1-SNAPSHOT.jar ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }}:~/app.jar
          
          # Move the file and ensure data directory exists
          # Create service file content
          echo '[Unit]
          Description=Spring Boot Application
          After=network.target
          
          [Service]
          User=springapp
          Group=springapp
          Type=simple
          Environment="SPRING_PROFILES_ACTIVE=prod"
          WorkingDirectory=/opt/myapp
          ExecStart=/usr/bin/java -jar /opt/myapp/app.jar
          SuccessExitStatus=143
          TimeoutStopSec=10
          Restart=always
          RestartSec=5
          
          [Install]
          WantedBy=multi-user.target' > springapp.service
          
          # Copy service file and set up application
          scp -i ~/.ssh/key.pem springapp.service ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }}:~/springapp.service
          ssh -i ~/.ssh/key.pem ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} '
          sudo mkdir -p /opt/myapp/data
          sudo chown -R ec2-user:ec2-user /opt/myapp
          sudo chmod 755 /opt/myapp/data
          sudo mv ~/app.jar /opt/myapp/app.jar
          sudo mv ~/springapp.service /etc/systemd/system/springapp.service
          sudo systemctl daemon-reload
          sudo systemctl enable springapp
          sudo systemctl stop springapp || true
          '
          
          # Set permissions and restart service
          ssh -i ~/.ssh/key.pem ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} '
          sudo chown ec2-user:ec2-user /opt/myapp/app.jar
          sudo chmod 500 /opt/myapp/app.jar
          sudo systemctl daemon-reload
          sudo systemctl start springapp
          sleep 5  # Give the service a moment to start
          sudo systemctl status springapp
          '

      - name: Verify Deployment
        run: |
          # Wait for application to start
          sleep 60
          
          # Check if application is responding
          curl --retry 5 --retry-delay 10 http://${{ secrets.EC2_HOST }}:8081/actuator/health || (
            echo "Application health check failed"
            ssh -i ~/.ssh/key.pem ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} 'sudo journalctl -u springapp -n 50'
            exit 1
          )